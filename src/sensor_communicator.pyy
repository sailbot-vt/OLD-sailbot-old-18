import Adafruit_BBIO.ADC as ADC
import Adafruit_BBIO.UART as UART
import serial
import time
import binascii

import ship_data
from point import Point

def setup():
	ADC.setup()

def read_airmar():
    # TODO Read Airmar
    UART.setup("UART1")
    port = serial.Serial(port="/dev/ttyO1", baudrate=4800, parity=serial.PARITY_NONE, stopbits=serial.STOPBITS_ONE, bytesize=serial.EIGHTBITS, timeout=1)
    port.close()
    port.open()
    
#    print("reading")
    print("-------------------------------------> ")

    input = port.read(port.inWaiting())
    fixedInput = ""

    for a in input:
#	print(a, ord(a), 0xF1, 191)
	aa = ord(a)
#	print(hex((((~aa & 0xFF) >> 1) & 0xFF) | 0x00))
	aaa = hex(((~aa & 0xFF) >> 1) & 0xFF)[2:]
	if(len(aaa) == 1):
		aaa = '0' + aaa[0]

#	print(aaa)
	fixedInput += aaa.decode('hex')

    print(fixedInput)
	
#    for q in range(10):    
#		a = port.read()
#		print(a)
#		print(a.encode("hex"))
#		s += ' '
#		s += str(a.encode("hex"))

    print('\t' * 20 + "Airmar read, ship_data updated")


def read_rc_receiver():
    # TODO Read RC input
    winch = ADC.read('P9_40')
    rudder = ADC.read('P9_39')
    auto = ADC.read('P9_36')

    print("w, r, a******************************************")
    print(winch, rudder, auto)
    print("*************************************************")

    rudder_angle = ((rudder - .1) - .05)*(40/.05)
    winch_angle = ((winch - .1) - .05)*(50/.05)
    #print(rudder_angle)

    ship_data.RC_rudder_angle = rudder_angle
    ship_data.RC_winch_angle = winch_angle


